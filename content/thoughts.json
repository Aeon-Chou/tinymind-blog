[
  {
    "id": "1728526130670",
    "content": "// #Gemini\n// name: Gemini\n// icon: \"iconify:tabler:file-text-ai\"\n// language: javascript\n// module: true\n// entitlements: [network]\n// options: [{\n//   identifier: apikey, label: API Key, type: string,\n//   description: 'Obtain API key from Google Cloud Console'\n// },\n// {\n//    identifier: model, label: 'model', type: multiple,\n//    values:['gemini-1.5-flash-latest','gemini-1.5-pro-latest','gemini-1.0-pro']\n//  }, \n// {\n//   identifier: prompt, label: 'Gemini', type: string,\n//   defaultValue: \"\",\n//   description: 'Enter the prompt template using {input} as a placeholder for the text'\n// }\n// ]\n\nconst axios = require(\"axios\");\n\nasync function generateContent(input, options) {\n  let prompt;\n  if(options.prompt.length === 0){\n     prompt=\"I will give you text content, you will rewrite it and output a better version of my text. Correct spelling, grammar, and punctuation errors in the given text. Keep the meaning the same. Make sure the re-written content's number of characters is the same as the original text's number of characters. Do not alter the original structure and formatting outlined in any way. Only give me the output and nothing else. Now, using the concepts above, re-write the following text. Respond in the same language variety or dialect of the following text:{input}\";\n  } \n  else{\n     prompt=options.prompt;\n  }\n\n  prompt=prompt.replace('{input}', input.text);\n  const requestBody = {\n    \"contents\": [{\n      \"parts\": [\n        {\"text\": prompt}\n      ]\n    }],\n    \"safetySettings\": [\n      {\n        \"category\": \"HARM_CATEGORY_HARASSMENT\",\n        \"threshold\": \"BLOCK_ONLY_HIGH\"\n      }\n    ],\n    \"generationConfig\": {\n      \"stopSequences\": [\n        \"Title\"\n      ],\n      \"temperature\": 1.0,\n      \"maxOutputTokens\": 8192,\n      \"topP\": 0.95,\n      \"topK\": 64\n    }\n  };\n\n  try {\n    const response = await axios.post(\n      `https://generativelanguage.googleapis.com/v1beta/models/${options.model}:generateContent?key=${options.apikey}`,\n      requestBody,\n      { headers: { 'Content-Type': 'application/json' } }\n    );\n\n    const generatedText = response.data.candidates[0].content.parts.map(part => part.text).join('\\n');\n    return generatedText;\n  } catch (error) {\n    console.error(\"Error generating content:\", error);\n    return \"Error generating content: \" + error.message;\n  }\n}\n\nexports.actions = [{\n  title: \"Gemini\",\n  after: \"paste-result\",\n  code: async (input, options) => generateContent(input, options),\n}];",
    "timestamp": "2024-10-10T02:08:50.670Z"
  },
  {
    "id": "1727011991609",
    "content": "github page 做 idea 等日常记录似乎还是不够方便",
    "timestamp": "2024-09-22T13:33:11.609Z"
  },
  {
    "id": "1727009570617",
    "content": "“世界是一个巨大的草台班子”，听起来挺泄气的，走向了“一切不值得”的自我解构。但也可以换个角度，草台班子是人员草台还是决策草台？是个体草台还是系统草台？弄明白草台的载体与逻辑，是往前多走几步的动力，也是一种资源。",
    "timestamp": "2024-09-22T12:52:50.617Z"
  },
  {
    "id": "1727005913087",
    "content": "来来回回，各种动机，折腾过 2 个 github page。tinymind 给了一个更便捷的方式来更新 blog，值得尝试。",
    "timestamp": "2024-09-22T11:51:53.087Z"
  }
]